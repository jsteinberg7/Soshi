def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.1'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false

    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.swoledevs.soshi"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // dependencies {
    //     api 'com.google.firebase:firebase-ml-vision-image-label-model:19.0.0'

    // }

//     signingConfigs {
//         release {
//             storeFile file("[keystore_name].jks")
//             storePassword "myvs123"
//             keyAlias "keyalias"
//             keyPassword "myvs123"

// //            keyAlias keystoreProperties['keyAlias']
// //            keyPassword keystoreProperties['keyPassword']
// //            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
// //            storePassword keystoreProperties['storePassword']
//         }
//    }
//     buildTypes {
//        release {
// //           storeFile file("[keystore_name].jks")
// //           storePassword "myvs123"
// //           keyAlias "keyalias"
// //           keyPassword "myvs123"
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now,
//            // so `flutter run --release` works.
//            signingConfig signingConfigs.release
//        }
//    }
   signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storefile'] ? file(keystoreProperties['storefile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
       release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
       }
   }

//    signingConfigs {
//       release {
//           keyAlias keystoreProperties['keyAlias']
//           keyPassword keystoreProperties['keyPassword']
//           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//           storePassword keystoreProperties['storePassword']
//       }
//   }
//   buildTypes {
//       release {
//           signingConfig signingConfigs.release
//       }
   }
//    buildTypes {
//        release {
//            signingConfig signingConfigs.debug
//        }
//    }

//}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:26.3.0')
    implementation 'com.google.firebase:firebase-analytics'
    // implementation 'com.google.firebase:firebase-auth'
    // implementation 'com.google.firebase:firebase-firestore'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.0.0')

    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth'
}